generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model User {
  id             String       @id @default(uuid())
  username       String       @unique
  email          String       @unique
  password       String
  isAdmin        Boolean      @default(false)
  posts          BlogPost[]
  comments       Comment[]
  likedPosts     BlogPost[]   @relation("PostLikes")
  likedComments  Comment[]    @relation("CommentLikes")
  refreshTokens  RefreshToken[]  
}

model BlogPost {
  id           String    @id @default(uuid())
  title        String
  text         String
  layout       Layout    @default(STANDARD)
  createdAt    DateTime  @default(now())
  isPublic     Boolean   @default(false)
  user         User      @relation(fields: [userId], references: [id])
  userId       String
  likes        User[]    @relation("PostLikes")
  comments     Comment[]
  }

model Comment {
  id          String    @id  @default(uuid())
  createdAt   DateTime  @default(now())
  blogPost    BlogPost  @relation(fields: [blogPostId], references: [id])
  blogPostId  String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  likes       User[]    @relation("CommentLikes")
}

model RefreshToken {
  id            String        @id @default(uuid())
  user          User          @relation(fields: [userId], references: [id])
  userId        String
  token         String        @unique
  createdAt     DateTime      @default(now())
  expiresAt     DateTime
  revoked       Boolean       @default(false)
  replacedBy    RefreshToken? @relation("TokenReplacement", fields: [replacedById], references: [id])
  replacedById  String? @unique
  replaces      RefreshToken? @relation("TokenReplacement")
}

enum Layout {
  STANDARD
  FEATURED
  GALLERY
}